name: Docker Build Images

on:
  push:
    paths:
      - 'images/services/**'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  detect-and-build:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # fetch full history

      - name: Detect changed services
        id: set-matrix
        run: |
          CHANGED_SERVICES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
            | grep -oP 'images/services/\K[^/]+(?=/)' \
            | sort -u)
          if [ -z "$CHANGED_SERVICES" ]; then
            echo "No changes detected."
            echo "::set-output name=matrix::[]"
          else
            MATRIX=$(echo $CHANGED_SERVICES | jq -R -s -c 'split(" ") | map({service:.})')
            echo "Changed services: $CHANGED_SERVICES"
            echo "::set-output name=matrix::$MATRIX"
          fi

  build:
    needs: detect-and-build
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.detect-and-build.outputs.services)}}
      fail-fast: false
    if: ${{ matrix.service != '' }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: images/services/${{ matrix.service }}
          push: true
          tags: ${{ env.REGISTRY }}/myrenic/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

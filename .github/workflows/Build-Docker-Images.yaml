name: Docker Build

on:
  push:
    paths:
      - 'images/services/**'

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-matrix.outputs.services }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Detect changed services
        id: set-matrix
        run: |
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} \
            | grep -oP 'images/services/\K[^/]+(?=/)' \
            | sort -u \
            | tr '\n' ' ')
          if [ -z "$CHANGED" ]; then
            echo "services=[]" >> $GITHUB_OUTPUT
            echo "No changed services."
          else
            MATRIX=$(echo $CHANGED | jq -R -s -c 'split(" ") | map({service:.})')
            echo "services=$MATRIX" >> $GITHUB_OUTPUT
            echo "Changed services: $CHANGED"
          fi

  build:
    needs: detect-changes
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.services) }}
    steps:
      - name: Skip if no service
        if: ${{ matrix.service == '' }}
        run: echo "No changed service, skipping build."

      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        if: ${{ matrix.service != '' }}
        uses: docker/build-push-action@v6
        with:
          context: images/services/${{ matrix.service }}
          push: true
          tags: ${{ env.REGISTRY }}/myrenic/${{ matrix.service }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

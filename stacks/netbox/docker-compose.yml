services:
  netbox:
    image: netboxcommunity/netbox:v4.1-3.0.2
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      redis-cache:
        condition: service_healthy
    user: "unit:root"
    environment:
      CORS_ORIGIN_ALLOW_ALL: ${CORS_ORIGIN_ALLOW_ALL}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_SERVER: ${EMAIL_SERVER}
      EMAIL_SSL_CERTFILE: ${EMAIL_SSL_CERTFILE}
      EMAIL_SSL_KEYFILE: ${EMAIL_SSL_KEYFILE}
      EMAIL_TIMEOUT: ${EMAIL_TIMEOUT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      GRAPHQL_ENABLED: ${GRAPHQL_ENABLED}
      HOUSEKEEPING_INTERVAL: ${HOUSEKEEPING_INTERVAL}
      MEDIA_ROOT: ${MEDIA_ROOT}
      METRICS_ENABLED: ${METRICS_ENABLED}
      REDIS_CACHE_DATABASE: ${REDIS_CACHE_DATABASE}
      REDIS_CACHE_HOST: ${REDIS_CACHE_HOST}
      REDIS_CACHE_INSECURE_SKIP_TLS_VERIFY: ${REDIS_CACHE_INSECURE_SKIP_TLS_VERIFY}
      REDIS_CACHE_PASSWORD: ${REDIS_CACHE_PASSWORD}
      REDIS_CACHE_SSL: ${REDIS_CACHE_SSL}
      REDIS_DATABASE: ${REDIS_DATABASE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_INSECURE_SKIP_TLS_VERIFY: ${REDIS_INSECURE_SKIP_TLS_VERIFY}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_SSL: ${REDIS_SSL}
      RELEASE_CHECK_URL: ${RELEASE_CHECK_URL}
      SECRET_KEY: ${SECRET_KEY}
      SKIP_SUPERUSER: ${SKIP_SUPERUSER}
      WEBHOOKS_ENABLED: ${WEBHOOKS_ENABLED}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/login/ || exit 1"]
      start_period: 90s
      timeout: 3s
      interval: 15s
    volumes:
      - netbox-media:/opt/netbox/netbox/media
      - netbox-reports:/opt/netbox/netbox/reports
      - netbox-scripts:/opt/netbox/netbox/scripts
    ports:
      - "8000:8080"
    networks:
      - netbox-net
    container_name: netbox

  netbox-worker:
    image: netboxcommunity/netbox:v4.1-3.0.2
    depends_on:
      netbox:
        condition: service_healthy
    command:
      - /opt/netbox/venv/bin/python
      - /opt/netbox/netbox/manage.py
      - rqworker
    user: "unit:root"
    environment:
      CORS_ORIGIN_ALLOW_ALL: ${CORS_ORIGIN_ALLOW_ALL}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_SERVER: ${EMAIL_SERVER}
      EMAIL_SSL_CERTFILE: ${EMAIL_SSL_CERTFILE}
      EMAIL_SSL_KEYFILE: ${EMAIL_SSL_KEYFILE}
      EMAIL_TIMEOUT: ${EMAIL_TIMEOUT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      GRAPHQL_ENABLED: ${GRAPHQL_ENABLED}
      HOUSEKEEPING_INTERVAL: ${HOUSEKEEPING_INTERVAL}
      MEDIA_ROOT: ${MEDIA_ROOT}
      METRICS_ENABLED: ${METRICS_ENABLED}
      REDIS_CACHE_DATABASE: ${REDIS_CACHE_DATABASE}
      REDIS_CACHE_HOST: ${REDIS_CACHE_HOST}
      REDIS_CACHE_INSECURE_SKIP_TLS_VERIFY: ${REDIS_CACHE_INSECURE_SKIP_TLS_VERIFY}
      REDIS_CACHE_PASSWORD: ${REDIS_CACHE_PASSWORD}
      REDIS_CACHE_SSL: ${REDIS_CACHE_SSL}
      REDIS_DATABASE: ${REDIS_DATABASE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_INSECURE_SKIP_TLS_VERIFY: ${REDIS_INSECURE_SKIP_TLS_VERIFY}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_SSL: ${REDIS_SSL}
      RELEASE_CHECK_URL: ${RELEASE_CHECK_URL}
      SECRET_KEY: ${SECRET_KEY}
      SKIP_SUPERUSER: ${SKIP_SUPERUSER}
      WEBHOOKS_ENABLED: ${WEBHOOKS_ENABLED}
    healthcheck:
      test: ["CMD-SHELL", "ps -aux | grep -v grep | grep -q rqworker || exit 1"]
      start_period: 20s
      timeout: 3s
      interval: 15s
    volumes:
      - netbox-media:/opt/netbox/netbox/media
      - netbox-reports:/opt/netbox/netbox/reports
      - netbox-scripts:/opt/netbox/netbox/scripts
    networks:
      - netbox-net
    container_name: netbox-worker

  netbox-housekeeping:
    image: netboxcommunity/netbox:v4.1-3.0.2
    depends_on:
      netbox:
        condition: service_healthy
    command:
      - /opt/netbox/housekeeping.sh
    user: "unit:root"
    environment:
      CORS_ORIGIN_ALLOW_ALL: ${CORS_ORIGIN_ALLOW_ALL}
      DB_HOST: ${DB_HOST}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USER: ${DB_USER}
      EMAIL_FROM: ${EMAIL_FROM}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      EMAIL_PORT: ${EMAIL_PORT}
      EMAIL_SERVER: ${EMAIL_SERVER}
      EMAIL_SSL_CERTFILE: ${EMAIL_SSL_CERTFILE}
      EMAIL_SSL_KEYFILE: ${EMAIL_SSL_KEYFILE}
      EMAIL_TIMEOUT: ${EMAIL_TIMEOUT}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_USE_SSL: ${EMAIL_USE_SSL}
      EMAIL_USE_TLS: ${EMAIL_USE_TLS}
      GRAPHQL_ENABLED: ${GRAPHQL_ENABLED}
      HOUSEKEEPING_INTERVAL: ${HOUSEKEEPING_INTERVAL}
      MEDIA_ROOT: ${MEDIA_ROOT}
      METRICS_ENABLED: ${METRICS_ENABLED}
      REDIS_CACHE_DATABASE: ${REDIS_CACHE_DATABASE}
      REDIS_CACHE_HOST: ${REDIS_CACHE_HOST}
      REDIS_CACHE_INSECURE_SKIP_TLS_VERIFY: ${REDIS_CACHE_INSECURE_SKIP_TLS_VERIFY}
      REDIS_CACHE_PASSWORD: ${REDIS_CACHE_PASSWORD}
      REDIS_CACHE_SSL: ${REDIS_CACHE_SSL}
      REDIS_DATABASE: ${REDIS_DATABASE}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_INSECURE_SKIP_TLS_VERIFY: ${REDIS_INSECURE_SKIP_TLS_VERIFY}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_SSL: ${REDIS_SSL}
      RELEASE_CHECK_URL: ${RELEASE_CHECK_URL}
      SECRET_KEY: ${SECRET_KEY}
      SKIP_SUPERUSER: ${SKIP_SUPERUSER}
      WEBHOOKS_ENABLED: ${WEBHOOKS_ENABLED}
    healthcheck:
      test: ["CMD-SHELL", "ps -aux | grep -v grep | grep -q housekeeping || exit 1"]
      start_period: 20s
      timeout: 3s
      interval: 15s
    volumes:
      - netbox-media:/opt/netbox/netbox/media
      - netbox-reports:/opt/netbox/netbox/reports
      - netbox-scripts:/opt/netbox/netbox/scripts
    networks:
      - netbox-net
    container_name: netbox-housekeeping

  postgres:
    image: postgres:14
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -t 2 -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      timeout: 30s
      interval: 10s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - netbox-net
    container_name: postgres

  redis:
    image: redis:6-alpine
    command: >
      sh -c "redis-server --appendonly yes --requirepass $$REDIS_PASSWORD"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli -a \"$${REDIS_PASSWORD}\" ping) = 'PONG' ]"]
      start_period: 5s
      timeout: 3s
      interval: 1s
      retries: 5
    volumes:
      - redis-data:/data
    networks:
      - netbox-net
    container_name: redis

  redis-cache:
    image: redis:6-alpine
    command: >
      sh -c "redis-server --requirepass $$REDIS_CACHE_PASSWORD"
    environment:
      REDIS_CACHE_PASSWORD: ${REDIS_CACHE_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "[ $$(redis-cli -a \"$${REDIS_CACHE_PASSWORD}\" ping) = 'PONG' ]"]
      start_period: 5s
      timeout: 3s
      interval: 1s
      retries: 5
    volumes:
      - redis-cache-data:/data
    networks:
      - netbox-net
    container_name: redis-cache

volumes:
  netbox-media:
  netbox-reports:
  netbox-scripts:
  postgres-data:
  redis-data:
  redis-cache-data:

networks:
  netbox-net:
    driver: bridge